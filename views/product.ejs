<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= product.description %> - <%= product.SKU %></title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        .color-swatch {
            transition: all 0.3s ease;
        }
        .color-swatch:hover {
            transform: scale(1.1);
        }
        .color-swatch.selected {
            border: 2px solid #000;
            box-shadow: 0 0 0 2px #fff, 0 0 0 4px #000;
        }
        .size-option.selected {
            background-color: #000;
            color: #fff;
        }
        .quantity-btn {
            transition: all 0.2s ease;
        }
        .quantity-btn:hover {
            background-color: #f3f4f6;
        }
        .add-to-cart-btn {
            transition: all 0.3s ease;
            background-image: linear-gradient(to right, #000000, #434343);
        }
        .add-to-cart-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>
<body class="bg-gray-50">
    <div class="container mx-auto px-4 py-8 max-w-6xl">
        <div class="flex flex-col md:flex-row gap-8 bg-white rounded-lg shadow-lg overflow-hidden">
            <!-- Product Image Gallery -->
            <div class="md:w-1/2">
                <div class="sticky top-4">
                    <img src="<%= product.img_path %>" 
                         alt="<%= product.description %>"
                         class="w-full h-auto object-cover rounded-lg"
                         onerror="this.src='/images/default-product.jpg'">
                    <div class="flex mt-4 gap-2 overflow-x-auto py-2">
                        <% ['red', 'blue', 'black', 'white'].forEach(color => { %>
                            <div class="color-swatch w-12 h-12 rounded-full cursor-pointer border border-gray-200"
                                 style="background-color: '<%= color %>'"
                                 onclick="selectColor(event, '<%= color %>')"></div>
                        <% }); %>
                    </div>
                </div>
            </div>

            <!-- Product Details -->
            <div class="md:w-1/2 p-6">
                <div class="mb-6">
                    <h1 class="text-3xl font-bold text-gray-900"><%= product.description %></h1>
                    <p class="text-gray-500 text-sm mt-1">SKU: <%= product.SKU %></p>
                    
                    <% if (product.promo && product.promo > 0) { %>
                        <div class="flex items-center mt-3">
                            <span class="text-gray-400 line-through mr-2">$<%= product.price.toFixed(2) %></span>
                            <span class="text-2xl font-bold text-red-600">$<%= (product.price * (100 - product.promo) / 100).toFixed(2) %></span>
                            <span class="ml-2 px-2 py-1 bg-red-100 text-red-800 text-xs font-semibold rounded-full">
                                <%= product.promo %>% OFF
                            </span>
                        </div>
                    <% } else { %>
                        <div class="text-2xl font-bold text-gray-900 mt-3">$<%= product.price.toFixed(2) %></div>
                    <% } %>
                </div>

                <!-- Size Selection -->
                <div class="mb-6">
                    <h3 class="text-sm font-medium text-gray-900 mb-2">Size</h3>
                    <div class="flex flex-wrap gap-2">
                        <% ['S', 'M', 'L', 'XL', 'XXL'].forEach(size => { %>
                            <button class="size-option w-12 h-12 border border-gray-300 rounded-md flex items-center justify-center font-medium hover:bg-gray-50"
                                    onclick="selectSize(event, '<%= size %>')">
                                <%= size %>
                            </button>
                        <% }); %>
                    </div>
                </div>

                
                <div class="mb-6">
                    <h3 class="text-sm font-medium text-gray-900 mb-2">Color</h3>
                    <div class="flex gap-3">
                        <% ['Black', 'White', 'Navy', 'Gray'].forEach(color => { 
                            const colorValue = color.toLowerCase();
                            const colorMap = {
                                'black': '#000000',
                                'white': '#ffffff',
                                'navy': '#001f3f',
                                'gray': '#808080'
                            };
                        %>
                            <div class="flex items-center">
                                <input type="radio" 
                                       name="color" 
                                       id="color-<%= colorValue %>" 
                                       value="<%= colorValue %>"
                                       class="hidden peer"
                                       onchange="selectColor(event, '<%= colorValue %>')">
                                <label for="color-<%= colorValue %>" 
                                       class="flex items-center cursor-pointer group">
                                    <span class="color-swatch w-6 h-6 rounded-full mr-2 border-2 border-gray-200 peer-checked:border-black transition-all"
                                          style="background-color: '<%= colorMap[colorValue] %>'"></span>
                                    <span class="text-sm text-gray-700 group-hover:text-black"><%= color %></span>
                                </label>
                            </div>
                        <% }); %>
                    </div>
                </div>

                
                <div class="mb-8">
                    <h3 class="text-sm font-medium text-gray-900 mb-2">Quantity</h3>
                    <div class="flex items-center">
                        <button class="quantity-btn w-10 h-10 border border-gray-300 rounded-l-md flex items-center justify-center text-lg font-medium"
                                onclick="updateQuantity(-1)">
                            <i class="fas fa-minus"></i>
                        </button>
                        <input type="number" 
                               value="1" 
                               min="1" 
                               max="10"
                               class="w-16 h-10 border-t border-b border-gray-300 text-center font-medium focus:outline-none focus:ring-1 focus:ring-black">
                        <button class="quantity-btn w-10 h-10 border border-gray-300 rounded-r-md flex items-center justify-center text-lg font-medium"
                                onclick="updateQuantity(1)">
                            <i class="fas fa-plus"></i>
                        </button>
                    </div>
                </div>

                
                <div class="flex flex-col sm:flex-row gap-3">
                    <button class="add-to-cart-btn flex-1 py-3 px-6 rounded-md text-white font-bold text-sm uppercase tracking-wider" id="addToCartButton">
                        Add to Cart
                    </button>
                    <button class="flex-1 py-3 px-6 rounded-md border border-gray-300 bg-white font-bold text-sm uppercase tracking-wider hover:bg-gray-50 transition">
                        <i class="far fa-heart mr-2"></i> Wishlist
                    </button>
                </div>

                
                <div class="mt-8 border-t border-gray-200 pt-6">
                    <div class="mb-4">
                        <button class="accordion-btn flex justify-between items-center w-full text-left font-medium text-gray-900 focus:outline-none">
                            <span>Product Details</span>
                            <i class="fas fa-chevron-down transition-transform duration-200"></i>
                        </button>
                        <div class="accordion-content mt-2 text-gray-600 text-sm hidden">
                            <p><%= product.long_description || 'No additional details available.' %></p>
                        </div>
                    </div>
                    <div class="mb-4">
                        <button class="accordion-btn flex justify-between items-center w-full text-left font-medium text-gray-900 focus:outline-none">
                            <span>Shipping & Returns</span>
                            <i class="fas fa-chevron-down transition-transform duration-200"></i>
                        </button>
                        <div class="accordion-content mt-2 text-gray-600 text-sm hidden">
                            <p>Free shipping on all orders over $50. Returns accepted within 30 days of purchase.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
    // Global variables to track selections
    let selectedColor = null;
    let selectedSize = null;
    let quantity = 1;

    // Initialize when DOM is loaded
    document.addEventListener('DOMContentLoaded', function() {
        initializeColorSelection();
        initializeSizeSelection();
        setupQuantityControls();
        setupAccordions();
        setupAddToCart();
    });

    // COLOR SELECTION ============================================
    function initializeColorSelection() {
        const colorRadios = document.querySelectorAll('input[name="color"]');
        const colorSwatches = document.querySelectorAll('.color-swatch');
        
        // Set first color as default
        if (colorRadios.length > 0) {
            colorRadios[0].checked = true;
            selectedColor = colorRadios[0].value;
            colorSwatches[0].classList.add('selected');
        }

        // Add event listeners
        colorRadios.forEach(radio => {
            radio.addEventListener('change', function(e) {
                selectedColor = e.target.value;
                updateColorVisualState();
            });
        });

        colorSwatches.forEach(swatch => {
            swatch.addEventListener('click', function(e) {
                const colorValue = e.target.getAttribute('data-color') || 
                                 e.target.closest('.color-swatch').getAttribute('data-color');
                const correspondingRadio = document.querySelector(`input[value="${colorValue}"]`);
                if (correspondingRadio) {
                    correspondingRadio.checked = true;
                    correspondingRadio.dispatchEvent(new Event('change'));
                }
            });
        });
    }

    function updateColorVisualState() {
        document.querySelectorAll('.color-swatch').forEach(swatch => {
            swatch.classList.remove('selected');
        });
        
        const activeSwatch = document.querySelector(`.color-swatch[data-color="${selectedColor}"]`);
        if (activeSwatch) {
            activeSwatch.classList.add('selected');
        }
    }

    // SIZE SELECTION =============================================
    function initializeSizeSelection() {
        const sizeButtons = document.querySelectorAll('.size-option');
        
        // Set first size as default
        if (sizeButtons.length > 0) {
            sizeButtons[0].classList.add('selected');
            selectedSize = sizeButtons[0].textContent.trim();
        }

        // Add event listeners
        sizeButtons.forEach(button => {
            button.addEventListener('click', function(e) {
                document.querySelectorAll('.size-option').forEach(btn => {
                    btn.classList.remove('selected');
                });
                e.target.classList.add('selected');
                selectedSize = e.target.textContent.trim();
            });
        });
    }

    // QUANTITY CONTROL ===========================================
    function setupQuantityControls() {
        const quantityInput = document.querySelector('input[type="number"]');
        const minusBtn = document.querySelector('.quantity-btn:first-of-type');
        const plusBtn = document.querySelector('.quantity-btn:last-of-type');
        
        quantityInput.value = quantity;

        minusBtn.addEventListener('click', function() {
            if (quantity > 1) {
                quantity--;
                quantityInput.value = quantity;
            }
        });

        plusBtn.addEventListener('click', function() {
            if (quantity < 10) {
                quantity++;
                quantityInput.value = quantity;
            }
        });

        quantityInput.addEventListener('change', function(e) {
            let value = parseInt(e.target.value);
            if (isNaN(value) || value < 1) value = 1;
            if (value > 10) value = 10;
            quantity = value;
            e.target.value = value;
        });
    }

    // ACCORDIONS =================================================
    function setupAccordions() {
        document.querySelectorAll('.accordion-btn').forEach(button => {
            button.addEventListener('click', function(e) {
                const content = e.currentTarget.nextElementSibling;
                const icon = e.currentTarget.querySelector('i');
                
                content.classList.toggle('hidden');
                icon.classList.toggle('rotate-180');
            });
        });
    }

    //fetching content 
    //fetching the add to cart button
    document.getElementById("addToCartButton").addEventListener("click",async ()=>{
        if (!selectedColor || !selectedSize) {
                alert('Please select both color and size');
                return;
            }
        try{
            const response = await fetch("/addToCart",{
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                product_id: "<%= product.product_id %>",
                color: selectedColor,
                size: selectedSize,
                quantity: quantity,
                name:'<%= product.SKU %>'
            })
        })
        if(!response.ok){
            const errMessage = await response.json();
            throw new Error(errMessage);
        }
        const data = await response.json();
        console.log(data);
        }catch(err){
            console.log(err);
        }
        
    })
</script>
</body>
</html>